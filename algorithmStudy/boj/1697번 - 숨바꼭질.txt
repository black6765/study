import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Arrays;
import java.util.Deque;
import java.util.Queue;

public class Main {
    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        String[] nm = br.readLine().split(" ");
        final int N = Integer.parseInt(nm[0]);
        final int K = Integer.parseInt(nm[1]);

        final int MAX = 100_000;

        int[] dist = new int[MAX + 1];

        Arrays.fill(dist, -1);

        Deque<Integer> queue = new ArrayDeque<>();

        queue.addLast(N);
        dist[N]++;

        while (!queue.isEmpty()) {
            int cur = queue.removeFirst();
//            System.out.println("cur : " + cur + " ||| dist : " + dist[cur]);

            if (cur == K) {
                System.out.println(dist[cur]);
                return;
            }

            int[] nextPos = {cur + 1, cur - 1, cur * 2};

            for (int next : nextPos) {

                if (next < 0 || next > MAX) continue;
                if (dist[next] != -1 && (dist[next] <= dist[cur] + 1)) continue;

                queue.addLast(next);
                dist[next] = dist[cur] + 1;

            }
        }
    }
}