import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    static int answer = 0;
    static int N;
    static int M;
    static boolean[] used;
    static int[] arr;

    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        String[] input = br.readLine().split(" ");
        N = Integer.parseInt(input[0]);
        M = Integer.parseInt(input[1]);
        used = new boolean[N];

        arr = new int[N];

        input = br.readLine().split(" ");
        for (int i = 0; i < input.length; i++) {
            arr[i] = Integer.parseInt(input[i]);
        }

        backtracking(0, 0, true);

        System.out.println(answer);

    }

    private static void backtracking(int idx, int sum, boolean isFirst) {
        if (sum == M && !isFirst) {
            answer++;
        }

        if (idx == N) {
            return;
        }

        for (int j = idx; j < N; j++) {
            if (!used[j]) {
                used[j] = true;
                sum += arr[j];
                backtracking(j + 1, sum, false);
                sum -= arr[j];
                used[j] = false;
            }
        }
    }
}