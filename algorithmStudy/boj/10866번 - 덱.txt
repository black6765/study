import java.io.*;
import java.util.ArrayDeque;
import java.util.Deque;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(br.readLine());

        Deque<Integer> deq = new ArrayDeque<>();

        for (int i = 0; i < N; i++) {
            String[] cmd = br.readLine().split(" ");

            if (cmd[0].equals("pop_front")) {
                if (deq.isEmpty()) {
                    System.out.println("-1");
                } else {
                    System.out.println(deq.removeFirst());
                }
            }

            if (cmd[0].equals("pop_back")) {
                if (deq.isEmpty()) {
                    System.out.println("-1");
                } else {
                    System.out.println(deq.removeLast());
                }
            }

            if (cmd[0].equals("size")) {
                System.out.println(deq.size());
            }

            if (cmd[0].equals("empty")) {
                if (deq.isEmpty()) {
                    System.out.println("1");
                } else {
                    System.out.println("0");
                }
            }

            if (cmd[0].equals("front")) {
                if (deq.isEmpty()) {
                    System.out.println("-1");
                } else {
                    System.out.println(deq.peekFirst());
                }
            }

            if (cmd[0].equals("back")) {
                if (deq.isEmpty()) {
                    System.out.println("-1");
                } else {
                    System.out.println(deq.peekLast());
                }
            }

            if (cmd[0].equals("push_front")) {
                deq.addFirst(Integer.parseInt(cmd[1]));
            }

            if (cmd[0].equals("push_back")) {
                deq.addLast(Integer.parseInt(cmd[1]));
            }
        }

    }
}
